过滤器 实现Filter接口 -----过滤请求 request  
拦截器 Aop动态代理---拦截对象调用方法的时候。

1：定义一个拦截器springmvc干什么
LoginInteceptor 实现一个接口HandleInterceptor
2:代码如下:
package com.mengke.core;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.web.servlet.HandlerInterceptor;
import org.springframework.web.servlet.ModelAndView;

import com.mengke.bean.User;

public class LoginInterceptor implements HandlerInterceptor{

	@Override
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)
			throws Exception {
		User user = (User) request.getSession().getAttribute("session_user");
		if(user==null){
			response.sendRedirect(request.getContextPath()+"/login");
			return false;
		}else{
			return true;
		}
	}

	@Override
	public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,
			ModelAndView modelAndView) throws Exception {
		System.out.println("preHandle==true----->在拦截进入controller方法之前执行的方法");
	}

	@Override
	public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)
			throws Exception {
		System.out.println("preHandle==true----->在处理完controller方法之后执行的方法");
	}

}

3:配置注册SpringBoot --springMvc的拦截器配置如下：
1:定义SpringMvcWebAppConfigurer
2:继承一个类:WebMvcConfigurerAdapter
3:覆盖一个方法
4:写一个配置注解:@Configuration,在启动入口类，会自动去加载加了@Configuration的类


